@page "/"
@using CertiPurge.Data
@using OCR;
@using Tesseract
@rendermode InteractiveServer
@inject IJSRuntime JS
@inject ApplicationDbContext DbContext

<PageTitle>Home</PageTitle>

<div class="pt-8"
	<table>
		<thead class="bg-red-700">
			<tr class="text-white">
					<th>Name</th>
					<th>Course</th>
					<th>Grade</th>
					<th>Centre Number</th>
					<th>Candidate Number</th>
			</tr>

		</thead>
		<tbody>
			@foreach (var cert in CertificatesData)
			{
				<tr class="">
					<td>@cert.Name</td>
					<td>@cert.Course</td>
					<td>@cert.Grade</td>
					<td>@cert.CentreNumber</td>
					<td>@cert.CandidateNumber</td>
				</tr>
			}
		</tbody>
	</table>
</div>

@code {
	public class FileData
	{
		public string Name { get; set; } = "";
		public string Data { get; set; } = "";
		public long Size { get; set; }
		public string Type { get; set; } = "";
	}

	public List<Certificate> CertificatesData = new List<Certificate>();

	public bool IsProcessing { get; set; } = false;

	protected override async Task OnInitializedAsync()
	{
		CertificatesData = DbContext.Certificates.ToList();
	}

	public void Scan(string[] pages)
	{
		foreach (var page in pages)
		{
			string name = "";
			string course = "";
			string grade = "";
			string centrenum = "";
			string candidate = "";

			if (page.Split("\n")[0].Trim().Contains("AQA"))
			{
				AQAReader.ReadAQA(page, out name, out course, out grade, out centrenum, out candidate);
				Certificate cert = new Certificate
				{
					Name = name,
					Course = course,
					Grade = grade,
					CentreNumber = centrenum,
					CandidateNumber = candidate,
					ExamBoard = "AQA",
					ULN = "" // Set this to the appropriate value if available
				};

				DbContext.Certificates.Add(cert);

				CertificatesData.Add(cert);
			}
			else if (page.Split("\n")[0].Trim().Contains("BTEC"))
			{
				Console.WriteLine("Detected BTEC format.");
				BTECReader.ReadBTEC(page, out name, out course, out grade, out centrenum, out candidate);
				Certificate cert = new Certificate
				{
					Name = name,
					Course = course,
					Grade = grade,
					CentreNumber = centrenum,
					CandidateNumber = candidate,
					ExamBoard = "BTEC",
					ULN = "" // Set this to the appropriate value if available
				};

				DbContext.Certificates.Add(cert);

				CertificatesData.Add(cert);
			}
		}

		DbContext.SaveChanges();
	}

	public async Task SingleUpload(InputFileChangeEventArgs e)
	{
		IsProcessing = true;

		StateHasChanged();

		Console.WriteLine($"File selected: {e.File.Name}, {e.File.Size} bytes, {e.File.ContentType}");

		MemoryStream ms = new MemoryStream();
		await e.File.OpenReadStream().CopyToAsync(ms);
		var bytes = ms.ToArray();

		var pages = await Converter.ConvertPDFToText(bytes);

		Console.WriteLine($"Scanned {pages.Length} pages.");

		Scan(pages.ToArray());

		IsProcessing = false;

		StateHasChanged();
	}
}